/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI_Dictionary;

import java.awt.event.KeyEvent;

/**
 *
 * @author Quan
 */
public class FindEnglishWord extends javax.swing.JFrame {

    private Dictionary dictionary;
    private MainFrame mainFrame;
    private WordFrame wordFrame;

    /**
     * Creates new form MainFrame
     */
    public FindEnglishWord() {
        initComponents();
        wordFrame = new WordFrame();
        wordFrame.setCallerFrame(this);
        dictionary = Dictionary.instance;
    }

    public void setDictionary(Dictionary dictionary) {
        this.dictionary = dictionary;
    }

    public Dictionary getDictionary() {
        return dictionary;
    }

    public void setMainFrame(MainFrame mainFrame) {
        this.mainFrame = mainFrame;
    }

    public MainFrame getMainFrame() {
        return mainFrame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        showAllSearch = new javax.swing.JScrollPane();
        searchList = new javax.swing.JList<>();
        Name = new javax.swing.JLabel();
        Find = new javax.swing.JButton();
        inputWord = new javax.swing.JTextField();

        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        showAllSearch.setOpaque(true);

        searchList.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        searchList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        searchList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchListMouseReleased(evt);
            }
        });
        searchList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchListKeyReleased(evt);
            }
        });
        showAllSearch.setViewportView(searchList);

        Name.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Name.setText("Find English Word");

        Find.setText("Find");
        Find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindActionPerformed(evt);
            }
        });

        inputWord.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        inputWord.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputWordKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(showAllSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(inputWord, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Find, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(62, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Name)
                .addGap(194, 194, 194))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Find, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputWord, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(showAllSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindActionPerformed

        Word w = dictionary.findEngWord(inputWord.getText());
        if (w == null) {
            return;
        }
        showWord(w);
    }//GEN-LAST:event_FindActionPerformed

    public void showWord(Word word) {
        wordFrame.setWord(word);
        wordFrame.showWord();
        wordFrame.setVisible(true);
        wordFrame.setLocationRelativeTo(this);
    }

    private void inputWordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputWordKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            FindActionPerformed(null);
            return;
        } else if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            searchList.setListData(new Word[1]);
        }

        var inputText = inputWord.getText();

        if (inputText.equals("")) {
            return;
        }
        var words = dictionary.findAllEngWordContain(inputText);
        searchList.setListData(words);
    }//GEN-LAST:event_inputWordKeyReleased

    private void searchListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchListMouseReleased
        if (evt.getClickCount() < 2) {
            return;
        }
        var target = (javax.swing.JList<Word>) evt.getSource();
        int index = target.locationToIndex(evt.getPoint());
        if (index >= 0) {
            Word item = target.getModel().getElementAt(index);
            showWord(item);
        }
    }//GEN-LAST:event_searchListMouseReleased

    private void searchListKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchListKeyReleased
        if (evt.getKeyCode() != KeyEvent.VK_ENTER) {
            return;
        }
        showWord(searchList.getSelectedValue());
    }//GEN-LAST:event_searchListKeyReleased

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
        mainFrame.setVisible(true);
        mainFrame.setLocation(this.getLocation());
    }//GEN-LAST:event_formComponentHidden

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FindEnglishWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FindEnglishWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FindEnglishWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FindEnglishWord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FindEnglishWord().setVisible(true);
            }
        });
    }

    public void Init() {
        setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Find;
    private javax.swing.JLabel Name;
    private javax.swing.JTextField inputWord;
    private javax.swing.JList<Word> searchList;
    private javax.swing.JScrollPane showAllSearch;
    // End of variables declaration//GEN-END:variables
}
